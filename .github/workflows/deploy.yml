name: Build & Deploy to ECR

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: sa-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag and Push Docker image
        run: |
          docker build -t restaurante-devagile-front:latest .
          docker tag restaurante-devagile-front:latest \
            ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.sa-east-1.amazonaws.com/restaurante-devagile-front:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.sa-east-1.amazonaws.com/restaurante-devagile-front:latest

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.PATH_REPOSITORY }}
            aws ecr get-login-password --region sa-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.sa-east-1.amazonaws.com
            docker compose down
            docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.sa-east-1.amazonaws.com/restaurante-devagile-front:latest
            docker compose up -d

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: sa-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Delete untagged images from ECR
        run: |
          REPO_NAME=restaurante-devagile-front
          ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}
          REGION=sa-east-1

          UNTAGGED_DIGESTS=$(aws ecr list-images \
            --repository-name $REPO_NAME \
            --region $REGION \
            --filter "tagStatus=UNTAGGED" \
            --query 'imageIds[*].imageDigest' \
            --output text)

          for digest in $UNTAGGED_DIGESTS; do
            echo "Deletando digest órfão: $digest"
            aws ecr batch-delete-image \
              --region $REGION \
              --repository-name $REPO_NAME \
              --image-ids imageDigest=$digest
          done
