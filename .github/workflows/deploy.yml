name: Build & Deploy to ECR

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 1) Configura suas credenciais AWS (via IAM Role ou Access Keys)
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: sa-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # 2) Faz login no ECR
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # 3) Build, tag e push
      - name: Build, Tag and Push Docker image
        run: |
          # builda sua imagem local
          docker build -t restaurante-devagile-front:latest .

          # tagueia para o seu ECR
          docker tag restaurante-devagile-front:latest \
            ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.sa-east-1.amazonaws.com/restaurante-devagile-front

          # envia para o ECR
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.sa-east-1.amazonaws.com/restaurante-devagile-front

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.PATH_REPOSITORY }}

            # Autenticação no ECR
            aws ecr get-login-password --region sa-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.sa-east-1.amazonaws.com

            # Atualiza imagens e sobe o container
            docker compose down
            docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.sa-east-1.amazonaws.com/restaurante-devagile-front:latest
            docker compose up -d
